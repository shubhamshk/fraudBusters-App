{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import Login from'./components/Login';import Register from'./components/Register';import StudentDashboard from'./components/dashboards/StudentDashboard';import EmployerDashboard from'./components/dashboards/EmployerDashboard';import InstitutionDashboard from'./components/dashboards/InstitutionDashboard';import GovAdminDashboard from'./components/dashboards/GovAdminDashboard';import{getCurrentUser,logout}from'./api/auth';import'./components/Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Authentication state\nconst[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[authMode,setAuthMode]=useState('login');// 'login' or 'register'\nconst[isLoadingAuth,setIsLoadingAuth]=useState(true);// Authentication functions\nconst handleAuthSuccess=userData=>{setUser(userData);setIsAuthenticated(true);};const handleLogout=async()=>{try{await logout();setUser(null);setIsAuthenticated(false);}catch(error){console.error('Logout error:',error);// Force logout on error\nsetUser(null);setIsAuthenticated(false);}};const toggleAuthMode=()=>{setAuthMode(authMode==='login'?'register':'login');};// Check for existing session on app load\nuseEffect(()=>{const checkAuth=async()=>{try{const response=await getCurrentUser();setUser(response.user);setIsAuthenticated(true);}catch(error){// User not authenticated, continue to login\nconsole.log('Not authenticated');}finally{setIsLoadingAuth(false);}};checkAuth();},[]);// Render appropriate dashboard based on user role\nconst renderDashboard=()=>{if(!user||!user.role){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading user data...\"})]})});}switch(user.role){case'STUDENT':return/*#__PURE__*/_jsx(StudentDashboard,{user:user,onLogout:handleLogout});case'EMPLOYER':return/*#__PURE__*/_jsx(EmployerDashboard,{user:user,onLogout:handleLogout});case'INSTITUTION':return/*#__PURE__*/_jsx(InstitutionDashboard,{user:user,onLogout:handleLogout});case'GOV_ADMIN':return/*#__PURE__*/_jsx(GovAdminDashboard,{user:user,onLogout:handleLogout});default:return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",style:{padding:'2rem',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Invalid user role\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please contact support for assistance.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,style:{padding:'0.5rem 1rem',margin:'1rem'},children:\"Logout\"})]})});}};// Show loading screen while checking authentication\nif(isLoadingAuth){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]})});}// Show authentication screens if not logged in\nif(!isAuthenticated){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:authMode==='login'?/*#__PURE__*/_jsx(Login,{onSuccess:handleAuthSuccess,onToggleMode:toggleAuthMode}):/*#__PURE__*/_jsx(Register,{onSuccess:handleAuthSuccess,onToggleMode:toggleAuthMode})});}// Show main app if authenticated - render role-based dashboard\nreturn renderDashboard();}export default App;","map":{"version":3,"names":["React","useState","useEffect","Login","Register","StudentDashboard","EmployerDashboard","InstitutionDashboard","GovAdminDashboard","getCurrentUser","logout","jsx","_jsx","jsxs","_jsxs","App","user","setUser","isAuthenticated","setIsAuthenticated","authMode","setAuthMode","isLoadingAuth","setIsLoadingAuth","handleAuthSuccess","userData","handleLogout","error","console","toggleAuthMode","checkAuth","response","log","renderDashboard","role","className","children","onLogout","style","padding","textAlign","onClick","margin","onSuccess","onToggleMode"],"sources":["C:/Users/shubh/projects/file-verification-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport StudentDashboard from './components/dashboards/StudentDashboard';\r\nimport EmployerDashboard from './components/dashboards/EmployerDashboard';\r\nimport InstitutionDashboard from './components/dashboards/InstitutionDashboard';\r\nimport GovAdminDashboard from './components/dashboards/GovAdminDashboard';\r\nimport { getCurrentUser, logout } from './api/auth';\r\nimport './components/Dashboard.css';\r\n\r\nfunction App() {\r\n  // Authentication state\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [authMode, setAuthMode] = useState('login'); // 'login' or 'register'\r\n  const [isLoadingAuth, setIsLoadingAuth] = useState(true);\r\n\r\n  // Authentication functions\r\n  const handleAuthSuccess = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      // Force logout on error\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const toggleAuthMode = () => {\r\n    setAuthMode(authMode === 'login' ? 'register' : 'login');\r\n  };\r\n\r\n  // Check for existing session on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const response = await getCurrentUser();\r\n        setUser(response.user);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        // User not authenticated, continue to login\r\n        console.log('Not authenticated');\r\n      } finally {\r\n        setIsLoadingAuth(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Render appropriate dashboard based on user role\r\n  const renderDashboard = () => {\r\n    if (!user || !user.role) {\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"loading-screen\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading user data...</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    switch (user.role) {\r\n      case 'STUDENT':\r\n        return <StudentDashboard user={user} onLogout={handleLogout} />;\r\n      case 'EMPLOYER':\r\n        return <EmployerDashboard user={user} onLogout={handleLogout} />;\r\n      case 'INSTITUTION':\r\n        return <InstitutionDashboard user={user} onLogout={handleLogout} />;\r\n      case 'GOV_ADMIN':\r\n        return <GovAdminDashboard user={user} onLogout={handleLogout} />;\r\n      default:\r\n        return (\r\n          <div className=\"App\">\r\n            <div className=\"error-container\" style={{ padding: '2rem', textAlign: 'center' }}>\r\n              <h2>Invalid user role</h2>\r\n              <p>Please contact support for assistance.</p>\r\n              <button onClick={handleLogout} style={{ padding: '0.5rem 1rem', margin: '1rem' }}>Logout</button>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Show loading screen while checking authentication\r\n  if (isLoadingAuth) {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"loading-screen\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show authentication screens if not logged in\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"App\">\r\n        {authMode === 'login' ? (\r\n          <Login onSuccess={handleAuthSuccess} onToggleMode={toggleAuthMode} />\r\n        ) : (\r\n          <Register onSuccess={handleAuthSuccess} onToggleMode={toggleAuthMode} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show main app if authenticated - render role-based dashboard\r\n  return renderDashboard();\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}