{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\projects\\\\file-verification-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport FileUpload from './components/FileUpload';\nimport VerificationResult from './components/VerificationResult';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { getCurrentUser, logout } from './api/auth';\nimport renderDashboard from \"./components/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Authentication state\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authMode, setAuthMode] = useState('login'); // 'login' or 'register'\n  const [isLoadingAuth, setIsLoadingAuth] = useState(true);\n\n  // Analysis state\n  const [currentFile, setCurrentFile] = useState(null);\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [analysisSteps, setAnalysisSteps] = useState([]);\n\n  // Authentication functions\n  const handleAuthSuccess = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const handleLogout = async () => {\n    try {\n      await logout();\n      setUser(null);\n      setIsAuthenticated(false);\n      // Reset analysis state on logout\n      setCurrentFile(null);\n      setVerificationResult(null);\n      setIsAnalyzing(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Force logout on error\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const toggleAuthMode = () => {\n    setAuthMode(authMode === 'login' ? 'register' : 'login');\n  };\n\n  // Check for existing session on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const response = await getCurrentUser();\n        setUser(response.user);\n        setIsAuthenticated(true);\n      } catch (error) {\n        // User not authenticated, continue to login\n        console.log('Not authenticated');\n      } finally {\n        setIsLoadingAuth(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Professional analysis steps for certificate verification\n  const getAnalysisSteps = file => {\n    const baseSteps = [{\n      id: 1,\n      text: 'Establishing secure SSL connection...',\n      icon: '🔐',\n      duration: 1200\n    }, {\n      id: 2,\n      text: 'Encrypting and uploading certificate',\n      icon: '📤',\n      duration: 1800\n    }, {\n      id: 3,\n      text: 'Extracting certificate metadata',\n      icon: '📋',\n      duration: 1500\n    }, {\n      id: 4,\n      text: 'Analyzing certificate structure and format',\n      icon: '🔍',\n      duration: 2000\n    }, {\n      id: 5,\n      text: 'Parsing certificate information',\n      icon: '🧠',\n      duration: 1500\n    }, {\n      id: 7,\n      text: 'Computing digital fingerprint hash',\n      icon: '🔢',\n      duration: 2000\n    }, {\n      id: 8,\n      text: 'Connecting to certificate authorities...',\n      icon: '🏦',\n      duration: 2200\n    }, {\n      id: 9,\n      text: 'Cross-referencing issuing institution',\n      icon: '🏛️',\n      duration: 3000\n    }, {\n      id: 10,\n      text: 'Validating certificate format standards',\n      icon: '📄',\n      duration: 2400\n    }, {\n      id: 11,\n      text: 'Checking blockchain certificate ledger',\n      icon: '⛓️',\n      duration: 3200\n    }, {\n      id: 12,\n      text: 'Running AI forgery detection algorithms',\n      icon: '🤖',\n      duration: 4500\n    }, {\n      id: 13,\n      text: 'Analyzing certificate seal authenticity',\n      icon: '🛡️',\n      duration: 2800\n    }, {\n      id: 14,\n      text: 'Scanning fake certificate database',\n      icon: '🚫',\n      duration: 2600\n    }, {\n      id: 15,\n      text: 'Verifying issuing authority legitimacy',\n      icon: '✅',\n      duration: 2000\n    }, {\n      id: 16,\n      text: 'Generating comprehensive fraud detection report',\n      icon: '📊',\n      duration: 1800\n    }];\n\n    // Add certificate-specific steps based on file type\n    if (file.type.startsWith('image/')) {\n      baseSteps.splice(11, 0, {\n        id: 17,\n        text: 'Analyzing image EXIF metadata',\n        icon: '📷',\n        duration: 2300\n      }, {\n        id: 18,\n        text: 'Detecting certificate image manipulation',\n        icon: '🎨',\n        duration: 3500\n      }, {\n        id: 19,\n        text: 'Checking for digital watermarks',\n        icon: '💰',\n        duration: 2700\n      });\n    } else if (file.type === 'application/pdf') {\n      baseSteps.splice(11, 0, {\n        id: 20,\n        text: 'Converting PDF pages to high-resolution images',\n        icon: '📑',\n        duration: 2100\n      }, {\n        id: 21,\n        text: 'Validating embedded digital signatures',\n        icon: '✍️',\n        duration: 2800\n      }, {\n        id: 22,\n        text: 'Checking PDF security certificates',\n        icon: '🔒',\n        duration: 2400\n      });\n    }\n    return baseSteps;\n  };\n\n  // Real analysis function\n  const analyzeFile = async file => {\n    setIsAnalyzing(true);\n    setCurrentFile(file);\n    setCurrentStep(0);\n    const steps = getAnalysisSteps(file);\n    setAnalysisSteps(steps);\n    try {\n      // Simulate progressive analysis steps\n      for (let i = 0; i < steps.length; i++) {\n        setCurrentStep(i);\n        await new Promise(resolve => setTimeout(resolve, steps[i].duration));\n      }\n\n      // Generate final result\n      const mockResult = generateMockResult(file);\n      setVerificationResult(mockResult);\n    } catch (error) {\n      console.error('Analysis error:', error);\n      // Generate result even if there's an error\n      const mockResult = generateMockResult(file);\n      setVerificationResult(mockResult);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Generate mock verification results\n  const generateMockResult = file => {\n    const fileName = file.name.toLowerCase();\n\n    // Simple mock logic for demonstration\n    let status, confidence, details;\n    if (fileName.includes('fake') || fileName.includes('edited')) {\n      status = 'fake';\n      confidence = 0.85;\n      details = [{\n        name: 'Digital Signature',\n        status: 'fail',\n        description: 'No valid digital signature found'\n      }, {\n        name: 'Metadata Analysis',\n        status: 'fail',\n        description: 'Suspicious editing timestamps detected'\n      }, {\n        name: 'Content Integrity',\n        status: 'fail',\n        description: 'File shows signs of manipulation'\n      }, {\n        name: 'Source Verification',\n        status: 'fail',\n        description: 'Unable to verify original source'\n      }];\n    } else if (fileName.includes('suspicious') || Math.random() > 0.7) {\n      status = 'suspicious';\n      confidence = 0.65;\n      details = [{\n        name: 'Digital Signature',\n        status: 'warning',\n        description: 'Signature present but cannot be verified'\n      }, {\n        name: 'Metadata Analysis',\n        status: 'pass',\n        description: 'Metadata appears normal'\n      }, {\n        name: 'Content Integrity',\n        status: 'warning',\n        description: 'Minor inconsistencies detected'\n      }, {\n        name: 'Source Verification',\n        status: 'warning',\n        description: 'Source partially verified'\n      }];\n    } else {\n      status = 'authentic';\n      confidence = 0.92;\n      details = [{\n        name: 'Digital Signature',\n        status: 'pass',\n        description: 'Valid digital signature verified'\n      }, {\n        name: 'Metadata Analysis',\n        status: 'pass',\n        description: 'Metadata is consistent and unmodified'\n      }, {\n        name: 'Content Integrity',\n        status: 'pass',\n        description: 'File integrity verified'\n      }, {\n        name: 'Source Verification',\n        status: 'pass',\n        description: 'Source authenticity confirmed'\n      }];\n    }\n\n    // File metadata\n    const metadata = {\n      'File Size': `${(file.size / 1024 / 1024).toFixed(2)} MB`,\n      'File Type': file.type,\n      'Last Modified': new Date(file.lastModified).toLocaleDateString(),\n      'Analysis Time': new Date().toLocaleString(),\n      'Algorithm Version': '2.1.3'\n    };\n    return {\n      status,\n      confidence,\n      details,\n      metadata\n    };\n  };\n  const handleNewAnalysis = () => {\n    setCurrentFile(null);\n    setVerificationResult(null);\n    setIsAnalyzing(false);\n    setCurrentStep(0);\n    setAnalysisSteps([]);\n  };\n\n  // Show loading screen while checking authentication\n  if (isLoadingAuth) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show authentication screens if not logged in\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: authMode === 'login' ? /*#__PURE__*/_jsxDEV(Login, {\n        onSuccess: handleAuthSuccess,\n        onToggleMode: toggleAuthMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onSuccess: handleAuthSuccess,\n        onToggleMode: toggleAuthMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show main app if authenticated - render role-based dashboard\n  return renderDashboard();\n}\n_s(App, \"+0Oqr0l2CHGfA2u1JcJyTktk34w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FileUpload","VerificationResult","Login","Register","getCurrentUser","logout","renderDashboard","jsxDEV","_jsxDEV","App","_s","user","setUser","isAuthenticated","setIsAuthenticated","authMode","setAuthMode","isLoadingAuth","setIsLoadingAuth","currentFile","setCurrentFile","verificationResult","setVerificationResult","isAnalyzing","setIsAnalyzing","currentStep","setCurrentStep","analysisSteps","setAnalysisSteps","handleAuthSuccess","userData","handleLogout","error","console","toggleAuthMode","checkAuth","response","log","getAnalysisSteps","file","baseSteps","id","text","icon","duration","type","startsWith","splice","analyzeFile","steps","i","length","Promise","resolve","setTimeout","mockResult","generateMockResult","fileName","name","toLowerCase","status","confidence","details","includes","description","Math","random","metadata","size","toFixed","Date","lastModified","toLocaleDateString","toLocaleString","handleNewAnalysis","className","children","_jsxFileName","lineNumber","columnNumber","onSuccess","onToggleMode","_c","$RefreshReg$"],"sources":["C:/Users/shubh/projects/file-verification-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport FileUpload from './components/FileUpload';\nimport VerificationResult from './components/VerificationResult';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { getCurrentUser, logout } from './api/auth';\nimport renderDashboard from \"./components/\"\n\nfunction App() {\n  // Authentication state\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authMode, setAuthMode] = useState('login'); // 'login' or 'register'\n  const [isLoadingAuth, setIsLoadingAuth] = useState(true);\n\n  // Analysis state\n  const [currentFile, setCurrentFile] = useState(null);\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [analysisSteps, setAnalysisSteps] = useState([]);\n\n  // Authentication functions\n  const handleAuthSuccess = (userData) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      setUser(null);\n      setIsAuthenticated(false);\n      // Reset analysis state on logout\n      setCurrentFile(null);\n      setVerificationResult(null);\n      setIsAnalyzing(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Force logout on error\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  const toggleAuthMode = () => {\n    setAuthMode(authMode === 'login' ? 'register' : 'login');\n  };\n\n  // Check for existing session on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const response = await getCurrentUser();\n        setUser(response.user);\n        setIsAuthenticated(true);\n      } catch (error) {\n        // User not authenticated, continue to login\n        console.log('Not authenticated');\n      } finally {\n        setIsLoadingAuth(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  // Professional analysis steps for certificate verification\n  const getAnalysisSteps = (file) => {\n    const baseSteps = [\n      { id: 1, text: 'Establishing secure SSL connection...', icon: '🔐', duration: 1200 },\n      { id: 2, text: 'Encrypting and uploading certificate', icon: '📤', duration: 1800 },\n      { id: 3, text: 'Extracting certificate metadata', icon: '📋', duration: 1500 },\n      { id: 4, text: 'Analyzing certificate structure and format', icon: '🔍', duration: 2000 },\n      { id: 5, text: 'Parsing certificate information', icon: '🧠', duration: 1500 },\n      { id: 7, text: 'Computing digital fingerprint hash', icon: '🔢', duration: 2000 },\n      { id: 8, text: 'Connecting to certificate authorities...', icon: '🏦', duration: 2200 },\n      { id: 9, text: 'Cross-referencing issuing institution', icon: '🏛️', duration: 3000 },\n      { id: 10, text: 'Validating certificate format standards', icon: '📄', duration: 2400 },\n      { id: 11, text: 'Checking blockchain certificate ledger', icon: '⛓️', duration: 3200 },\n      { id: 12, text: 'Running AI forgery detection algorithms', icon: '🤖', duration: 4500 },\n      { id: 13, text: 'Analyzing certificate seal authenticity', icon: '🛡️', duration: 2800 },\n      { id: 14, text: 'Scanning fake certificate database', icon: '🚫', duration: 2600 },\n      { id: 15, text: 'Verifying issuing authority legitimacy', icon: '✅', duration: 2000 },\n      { id: 16, text: 'Generating comprehensive fraud detection report', icon: '📊', duration: 1800 }\n    ];\n\n    // Add certificate-specific steps based on file type\n    if (file.type.startsWith('image/')) {\n      baseSteps.splice(11, 0, \n        { id: 17, text: 'Analyzing image EXIF metadata', icon: '📷', duration: 2300 },\n        { id: 18, text: 'Detecting certificate image manipulation', icon: '🎨', duration: 3500 },\n        { id: 19, text: 'Checking for digital watermarks', icon: '💰', duration: 2700 }\n      );\n    } else if (file.type === 'application/pdf') {\n      baseSteps.splice(11, 0,\n        { id: 20, text: 'Converting PDF pages to high-resolution images', icon: '📑', duration: 2100 },\n        { id: 21, text: 'Validating embedded digital signatures', icon: '✍️', duration: 2800 },\n        { id: 22, text: 'Checking PDF security certificates', icon: '🔒', duration: 2400 }\n      );\n    }\n\n    return baseSteps;\n  };\n\n  // Real analysis function\n  const analyzeFile = async (file) => {\n    setIsAnalyzing(true);\n    setCurrentFile(file);\n    setCurrentStep(0);\n    \n    const steps = getAnalysisSteps(file);\n    setAnalysisSteps(steps);\n    \n    try {\n      // Simulate progressive analysis steps\n      for (let i = 0; i < steps.length; i++) {\n        setCurrentStep(i);\n        await new Promise(resolve => setTimeout(resolve, steps[i].duration));\n      }\n      \n      // Generate final result\n      const mockResult = generateMockResult(file);\n      setVerificationResult(mockResult);\n    } catch (error) {\n      console.error('Analysis error:', error);\n      // Generate result even if there's an error\n      const mockResult = generateMockResult(file);\n      setVerificationResult(mockResult);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Generate mock verification results\n  const generateMockResult = (file) => {\n    const fileName = file.name.toLowerCase();\n    \n    // Simple mock logic for demonstration\n    let status, confidence, details;\n    \n    if (fileName.includes('fake') || fileName.includes('edited')) {\n      status = 'fake';\n      confidence = 0.85;\n      details = [\n        { name: 'Digital Signature', status: 'fail', description: 'No valid digital signature found' },\n        { name: 'Metadata Analysis', status: 'fail', description: 'Suspicious editing timestamps detected' },\n        { name: 'Content Integrity', status: 'fail', description: 'File shows signs of manipulation' },\n        { name: 'Source Verification', status: 'fail', description: 'Unable to verify original source' }\n      ];\n    } else if (fileName.includes('suspicious') || Math.random() > 0.7) {\n      status = 'suspicious';\n      confidence = 0.65;\n      details = [\n        { name: 'Digital Signature', status: 'warning', description: 'Signature present but cannot be verified' },\n        { name: 'Metadata Analysis', status: 'pass', description: 'Metadata appears normal' },\n        { name: 'Content Integrity', status: 'warning', description: 'Minor inconsistencies detected' },\n        { name: 'Source Verification', status: 'warning', description: 'Source partially verified' }\n      ];\n    } else {\n      status = 'authentic';\n      confidence = 0.92;\n      details = [\n        { name: 'Digital Signature', status: 'pass', description: 'Valid digital signature verified' },\n        { name: 'Metadata Analysis', status: 'pass', description: 'Metadata is consistent and unmodified' },\n        { name: 'Content Integrity', status: 'pass', description: 'File integrity verified' },\n        { name: 'Source Verification', status: 'pass', description: 'Source authenticity confirmed' }\n      ];\n    }\n\n    // File metadata\n    const metadata = {\n      'File Size': `${(file.size / 1024 / 1024).toFixed(2)} MB`,\n      'File Type': file.type,\n      'Last Modified': new Date(file.lastModified).toLocaleDateString(),\n      'Analysis Time': new Date().toLocaleString(),\n      'Algorithm Version': '2.1.3'\n    };\n\n    return {\n      status,\n      confidence,\n      details,\n      metadata\n    };\n  };\n\n  const handleNewAnalysis = () => {\n    setCurrentFile(null);\n    setVerificationResult(null);\n    setIsAnalyzing(false);\n    setCurrentStep(0);\n    setAnalysisSteps([]);\n  };\n\n  // Show loading screen while checking authentication\n  if (isLoadingAuth) {\n    return (\n      <div className=\"App\">\n        <div className=\"loading-screen\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show authentication screens if not logged in\n  if (!isAuthenticated) {\n    return (\n      <div className=\"App\">\n        {authMode === 'login' ? (\n          <Login onSuccess={handleAuthSuccess} onToggleMode={toggleAuthMode} />\n        ) : (\n          <Register onSuccess={handleAuthSuccess} onToggleMode={toggleAuthMode} />\n        )}\n      </div>\n    );\n  }\n\n  // Show main app if authenticated - render role-based dashboard\n  return renderDashboard();\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}